#include <cstdio>
#include <cstring>
#include <cmath>
int ans[500050] = {0};
int cur;
int n;
// 5ÆäÊµ¿ÉÒÔµÄ
void init()
{
    for(int i=1; i<=n; i++)
    {
        ans[i] = i;
    }
}
void cal(int a, int b, char c)
{
    printf ( "%d %c %d\n", a, c, b );
    cur++;
}
int main()
{
    while(scanf("%d", &n) != EOF)
    {

        init();
        if(n>=20)
        {
            cur = n;
            //get 2  -> n+3
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(n+1, n+2, '+');
            //get 3  -> n+8
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(n+4, n+5, '+');
            cal(n+7, n+6, '+');
            //get 4  -> n+15
            cal(11, 12, '/');
            cal(13, 14, '/');
            cal(15, 16, '/');
            cal(17, 18, '/');
            cal(n+9, n+10, '+');
            cal(n+13, n+11, '+');
            cal(n+14, n+12, '+');
            //get 2*3*4  -> let it last
            //get 0  -> n+16
            cal(19, 20, '-');
            //printf ( "get 0 : %d, cur: %d\n", n+16, cur );
            for(int i=21; i<=n; i++)
            {
                cal(i, cur, '*');
                //printf ( "i: %d , cur: %d\n", i, cur );
            }
            cal(cur, n+3, '+');
            cal(cur, n+8, '*');
            cal(cur, n+15, '*');
            //printf ( "cur: %d\n", cur );
        }
        else if(n<=3)
        {
            printf ( "-1\n" );
        }
        else if(n == 4)
        {
            cal(1, 2, '*');
            cal(5, 3, '+');
            cal(6, 4, '+');
        }
        else if(n == 5)
        {
            cal(1, 2, '*');
            cal(3, 6, '*');
            cal(7, 4, '-');
            cal(8, 5, '/');
        }
        else if(n == 6)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 7, '-');
            cal(9, 8, '-');
            cal(10, 6, '*');
        }
        else if(n == 7)
        {
            //pass, ÆäÊµ¿ÉÒÔ
            cal(1, 2, '+');
            cal(3, 8, '+');
            cal(9, 4, '/');
            cal(5, 10, '+');
            cal(6, 11, '+');
            cal(7, 12, '+');
        }
        else if(n == 8)
        {
            cal(1, 2, '-');
            cal(3, 9, '*');
            cal(4, 10, '*');
            cal(5, 11, '*');
            cal(6, 7, '+');
            cal(8, 13, '+');
            cal(14, 12, '+');
        }
        else if(n == 9)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(10, 11, '+');
            cal(14, 12, '+');
            cal(9, 13, '-');
            cal(15, 16, '*');
        }
        else if(n == 10)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(11, 12, '+');
            cal(13, 15, '+');
            cal(14, 16, '+');
            cal(9, 17, '+');
            cal(10, 18, '+');
        }
        else if(n == 11)
        {
            //maybe problem
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '-');
            cal(9, 15, '*');
            cal(10, 16, '*');
            cal(12, 13, '+');
            cal(14, 11, '+');
            cal(18, 19, '*');
            cal(20, 17, '+');
        }
        else if(n == 12)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '-');
            cal(13, 14, '+');
            cal(7, 16, '*');
            cal(8, 15, '*');
            cal(9, 18, '*');
            cal(10, 19, '*');
            cal(11, 20, '*');
            cal(12, 21, '*');
            cal(22, 17, '+');
        }
        else if(n == 13)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '-');
            cal(9, 14, '-');
            cal(15, 16, '+');
            cal(18, 19, '*');
            cal(10, 17, '*');
            cal(11, 21, '*');
            cal(12, 22, '*');
            cal(13, 23, '*');
            cal(24, 20, '+');
        }
        else if(n == 14)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '-');
            cal(11, 15, '-');
            cal(20, 16, '-');
            cal(17, 18, '+');
            cal(21, 22, '*');
            cal(12, 19, '*');
            cal(13, 24, '*');
            cal(14, 25, '*');
            cal(26, 23, '+');
        }
        else if(n == 15)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(11, 12, '-');
            cal(16, 17, '+');
            cal(18, 22, '+');
            cal(13, 23, '-');
            cal(19, 20, '+');
            cal(24, 25, '*');
            cal(14, 21, '*');
            cal(15, 27, '*');
            cal(26, 28, '+');
        }
        else if(n == 16)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(11, 12, '/');
            cal(13, 14, '-');
            cal(17, 18, '+');
            cal(19, 20, '+');
            cal(24, 25, '+');
            cal(15, 26, '-');
            cal(21, 22, '+');
            cal(16, 23, '*');
            cal(28, 29, '+');
            cal(27, 30, '*');
        }
        else if(n == 17)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(11, 12, '/');
            cal(13, 14, '/');
            cal(15, 16, '-');
            cal(18, 19, '+');
            cal(20, 26, '+');
            cal(21, 27, '+');
            cal(22, 28, '+');
            cal(17, 29, '-');
            cal(23, 24, '+');
            cal(25, 31, '+');
            cal(30, 32, '*');
        }
        else if(n == 18)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(11, 12, '/');
            cal(13, 14, '/');
            cal(15, 16, '/');
            cal(17, 18, '/');
            cal(19, 20, '+');
            cal(21, 22, '+');
            cal(23, 29, '+');
            cal(24, 25, '+');
            cal(26, 27, '+');
            cal(31, 32, '+');
            cal(28, 30, '*');
            cal(33, 34, '*');
        }
        else if(n == 19)
        {
            cal(1, 2, '/');
            cal(3, 4, '/');
            cal(5, 6, '/');
            cal(7, 8, '/');
            cal(9, 10, '/');
            cal(11, 12, '-');
            cal(20, 21, '+');
            cal(22, 26, '+');
            cal(23, 27, '+');
            cal(24, 28, '+');
            cal(13, 29, '+');
            cal(14, 25, '*');
            cal(15, 31, '*');
            cal(16, 32, '*');
            cal(17, 33, '*');
            cal(18, 34, '*');
            cal(19, 35, '*');
            cal(30, 36, '+');
        }
    }
}